{"version":3,"file":"index.js","sources":["../../src/core/index.ts"],"sourcesContent":["export type ModuleType = 'cjs' | 'esm';\n\nexport function buildWorkerCode(source: string, moduleType: ModuleType)\n{\n    let result = `\\\nconst WORKER_CODE = ${JSON.stringify(source)};\nlet WORKER_URL = null;\nclass WorkerInstance\n{\n    constructor()\n    {\n        if (!WORKER_URL)\n        {\n            const trustedTypes = typeof window !== 'undefined' && typeof window.trustedTypes !== 'undefined' ? window.trustedTypes.createPolicy('pixi', {\n                createScriptURL: (value) => value,\n            }) : undefined;\n            WORKER_URL = URL.createObjectURL(new Blob([WORKER_CODE], { type: 'application/javascript' }));\n            WORKER_URL = trustedTypes.createScriptURL(WORKER_URL)\n        }\n        this.worker = new Worker(WORKER_URL);\n    }\n}\nWorkerInstance.revokeObjectURL = function revokeObjectURL()\n{\n    if (WORKER_URL)\n    {\n        URL.revokeObjectURL(WORKER_URL);\n        WORKER_URL = null;\n    }\n}\n`;\n\n    switch (moduleType)\n    {\n        case 'cjs': {\n            result += 'module.exports = WorkerInstance;';\n            break;\n        }\n        case 'esm': {\n            result += 'export default WorkerInstance;';\n            break;\n        }\n        default: {\n            throw new Error(`Unknown module type: ${moduleType}`);\n        }\n    }\n\n    return result;\n}\n"],"names":[],"mappings":";;AAEgB,SAAA,eAAA,CAAgB,QAAgB,UAChD,EAAA;AACI,EAAA,IAAI,MAAS,GAAA,CAAA,oBAAA,EACK,IAAK,CAAA,SAAA,CAAU,MAAM,CAAC,CAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAA,CAAA;AA2BxC,EAAA,QAAQ,UACR;AAAA,IACI,KAAK,KAAO,EAAA;AACR,MAAU,MAAA,IAAA,kCAAA,CAAA;AACV,MAAA,MAAA;AAAA,KACJ;AAAA,IACA,KAAK,KAAO,EAAA;AACR,MAAU,MAAA,IAAA,gCAAA,CAAA;AACV,MAAA,MAAA;AAAA,KACJ;AAAA,IACA,SAAS;AACL,MAAA,MAAM,IAAI,KAAA,CAAM,CAAwB,qBAAA,EAAA,UAAU,CAAE,CAAA,CAAA,CAAA;AAAA,KACxD;AAAA,GACJ;AAEA,EAAO,OAAA,MAAA,CAAA;AACX;;;;"}